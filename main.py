import os
from dotenv import load_dotenv
from telegram.ext import Application, CommandHandler, ContextTypes
from telegram import InlineKeyboardButton, InlineKeyboardMarkup, Update
from flask import Flask
import threading
import asyncio

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

app = Flask(__name__)

@app.route('/')
def home():
    return "OK"

def run_flask():
    print("Flask —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://0.0.0.0:8000")
    app.run(host="0.0.0.0", port=8000, use_reloader=False)  # –£–±–∏—Ä–∞–µ–º reloader –¥–ª—è —Ä–∞–±–æ—Ç—ã –Ω–∞ Koyeb

# –ó–∞–ø—É—Å–∫ Flask –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
threading.Thread(target=run_flask, daemon=True).start()

# –¢–≤–æ–π API-–∫–ª—é—á –æ—Ç BotFather
API_KEY = os.getenv("BOT_TOKEN")

# ID –≥—Ä—É–ø–ø—ã, –≤ –∫–æ—Ç–æ—Ä–æ–π –±–æ—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω
GROUP_ID = int(os.getenv("GROUP_ID"))

# –°—Å—ã–ª–∫–∞ –Ω–∞ —Ñ–æ—Ä–º—É Airtable
form_url = "https://airtable.com/app20FIZVkuqrfYCG/pagi3f25jJR4rmWeg/form"

# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat = update.effective_chat
    if not chat:
        print("‚ùå –û—à–∏–±–∫–∞: update.effective_chat = None")
        return

    chat_id = chat.id
    chat_type = chat.type  # –¢–∏–ø —á–∞—Ç–∞ (group, supergroup, private)

    print(f"üìå –ë–æ—Ç –ø–æ–ª—É—á–∏–ª –∫–æ–º–∞–Ω–¥—É –≤ —á–∞—Ç–µ {chat_id} (—Ç–∏–ø: {chat_type})")

    if chat_type in ["group", "supergroup"]:
        if chat_id == GROUP_ID:
            print("‚úÖ –î–æ—Å—Ç—É–ø —Ä–∞–∑—Ä–µ—à—ë–Ω!")
            keyboard = [[InlineKeyboardButton("–ó–∞–ø–æ–ª–Ω–∏—Ç—å —Ñ–æ—Ä–º—É –æ —Ä–µ–π—Å–µ", url=form_url)]]
            reply_markup = InlineKeyboardMarkup(keyboard)

            await context.bot.send_message(
                chat_id=chat_id,
                text="‚úÖ –ü—Ä–∏–≤–µ—Ç, —á–ª–µ–Ω –≥—Ä—É–ø–ø—ã! –î–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è —Ñ–æ—Ä–º—ã –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ:",
                reply_markup=reply_markup
            )
        else:
            print(f"üö´ –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω! (–ß–∞—Ç ID: {chat_id} –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å {GROUP_ID})")
            await context.bot.send_message(chat_id=chat_id, text="‚ùå –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É –±–æ—Ç—É.")
    else:
        print(f"üö´ –ë–æ—Ç –ø–æ–ª—É—á–∏–ª –∫–æ–º–∞–Ω–¥—É –≤ –õ–ò–ß–ù–û–ú —á–∞—Ç–µ (ID: {chat_id}). –û–¢–ö–ê–ó–ê–ù–û!")
        await context.bot.send_message(chat_id=chat_id, text="‚ùå –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –±–æ—Ç–∞ —Ç–æ–ª—å–∫–æ –≤ –≥—Ä—É–ø–ø–µ!")

def main():
    application = Application.builder().token(API_KEY).build()

    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
    application.add_handler(CommandHandler("start", start))

    # –ó–∞–ø—É—Å–∫ polling –≤ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–º —Ä–µ–∂–∏–º–µ
    asyncio.run(application.run_polling())

if __name__ == '__main__':
    print("–ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è")
    # –ó–∞–ø—É—Å–∫–∞–µ–º Telegram-–±–æ—Ç–∞ –∏ Flask –≤ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö –ø–æ—Ç–æ–∫–∞—Ö
    threading.Thread(target=main, daemon=True).start()
